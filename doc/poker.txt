题目：计算扑克牌的抽取顺序 （比赛前半小时公布题目）
有一副扑克牌，从上到下按顺序编号（1~54），从上面取两张放到最下面，然后拿出一张，如些往复，直到所有的扑克都拿完，算出抽取扑克的顺序。
示例：
原扑克牌序列
新扑克牌序列
1 2 3 4 5

2 3 4 5 1

4 5 1 2
3
5 1 2 4

1 2 4 5

2 4 5
3 1
4 5 2

5 2 4

2 4
3 1 5
4 2

2 4

4
3 1 5 2

3 1 5 2 4
要求：
牌的数量可变[0,1024*1024]，间隔可变[0, 1024]。
输入参数有两个，一个是牌的张灵敏，另一个是步长比如上面的例子步长是3，输出为int型数组 。
只使用java或go基本数据类型（不允许使用任何集合类)。
90分钟内完成。
